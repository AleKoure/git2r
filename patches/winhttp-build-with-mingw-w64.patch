*** winhttp.c	2014-11-11 20:04:36.860873774 +0100
--- winhttp-build-with-mingw-w64.c	2014-11-11 19:59:46.560866001 +0100
***************
*** 5,10 ****
--- 5,29 ----
   * a Linking Exception. For full terms see the included COPYING file.
   */
  
+ /**
+  * Changes to build and fix compiler warnings with mingw-w64:
+  *  - Define __CRT_STRSAFE_IMPL to fix duplicate extern error from strsafe.h
+  *  - Add CLSID_InternetSecurityManager
+  *  - Add IID_IInternetSecurityManager
+  *  - Remove #pragma comment(lib, "winhttp")
+  *  - Remove #pragma comment(lib, "rpcrt4")
+  *  - Remove unused variable 'default_port' in function 'winhttp_connect'
+  *  - Remove unused variable 't' in function 'winhttp_stream_write_single'
+  *  - Remove unused variable 't' in function 'winhttp_stream_write_buffered'
+  *  - Remove unused variable 't' in function 'winhttp_stream_write_chunked'
+  *  - Remove defined but unused 'prefix_http'
+  *  - Use format specifier PRIxZ in git_buf_printf in function 'write_chunk'
+  *  - Initialize 'wide_len' to 0 in function 'apply_basic_credential'
+  *  - Change 'wchar_t *types[]' to 'const WCHAR *types[]' in 'winhttp_stream_connect'
+  *
+  * 2014-08-27: Stefan Widgren <stefan.widgren@gmail.com>
+  */
+ 
  #ifdef GIT_WINHTTP
  
  #include "git2.h"
***************
*** 17,34 ****
  #include "repository.h"
  
  #include <wincrypt.h>
- #pragma comment(lib, "crypt32")
  #include <winhttp.h>
- #pragma comment(lib, "winhttp")
  
  #include <strsafe.h>
  
  /* For IInternetSecurityManager zone check */
  #include <objbase.h>
  #include <urlmon.h>
  
! /* For UuidCreate */
! #pragma comment(lib, "rpcrt4")
  
  #define WIDEN2(s) L ## s
  #define WIDEN(s) WIDEN2(s)
--- 36,52 ----
  #include "repository.h"
  
  #include <wincrypt.h>
  #include <winhttp.h>
  
+ #define __CRT_STRSAFE_IMPL
  #include <strsafe.h>
  
  /* For IInternetSecurityManager zone check */
  #include <objbase.h>
  #include <urlmon.h>
  
! const IID CLSID_InternetSecurityManager = {0x7b8a2d94,0x0ac9,0x11d1,{0x89,0x6c,0x00,0xc0,0x4f,0xb6,0xbf,0xc4}};
! const IID IID_IInternetSecurityManager  = {0x79EAC9EE,0xBAF9,0x11CE,{0x8C,0x82,0x00,0xAA,0x00,0x4B,0xA9,0x0B}};
  
  #define WIDEN2(s) L ## s
  #define WIDEN(s) WIDEN2(s)
***************
*** 43,49 ****
  #define WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH 0
  #endif
  
- static const char *prefix_http = "http://";
  static const char *prefix_https = "https://";
  static const char *upload_pack_service = "upload-pack";
  static const char *upload_pack_ls_service_url = "/info/refs?service=git-upload-pack";
--- 61,66 ----
***************
*** 98,104 ****
  	git_cred_userpass_plaintext *c = (git_cred_userpass_plaintext *)cred;
  	git_buf buf = GIT_BUF_INIT, raw = GIT_BUF_INIT;
  	wchar_t *wide = NULL;
! 	int error = -1, wide_len;
  
  	git_buf_printf(&raw, "%s:%s", c->username, c->password);
  
--- 115,121 ----
  	git_cred_userpass_plaintext *c = (git_cred_userpass_plaintext *)cred;
  	git_buf buf = GIT_BUF_INIT, raw = GIT_BUF_INIT;
  	wchar_t *wide = NULL;
! 	int error = -1, wide_len = 0;
  
  	git_buf_printf(&raw, "%s:%s", c->username, c->password);
  
***************
*** 244,250 ****
  	git_buf buf = GIT_BUF_INIT;
  	char *proxy_url = NULL;
  	wchar_t ct[MAX_CONTENT_TYPE_LEN];
! 	wchar_t *types[] = { L"*/*", NULL };
  	BOOL peerdist = FALSE;
  	int error = -1;
  	unsigned long disable_redirects = WINHTTP_DISABLE_REDIRECTS;
--- 261,267 ----
  	git_buf buf = GIT_BUF_INIT;
  	char *proxy_url = NULL;
  	wchar_t ct[MAX_CONTENT_TYPE_LEN];
! 	const WCHAR *types[] = { L"*/*", NULL };
  	BOOL peerdist = FALSE;
  	int error = -1;
  	unsigned long disable_redirects = WINHTTP_DISABLE_REDIRECTS;
***************
*** 460,466 ****
  	git_buf buf = GIT_BUF_INIT;
  
  	/* Chunk header */
! 	git_buf_printf(&buf, "%X\r\n", len);
  
  	if (git_buf_oom(&buf))
  		return -1;
--- 477,483 ----
  	git_buf buf = GIT_BUF_INIT;
  
  	/* Chunk header */
! 	git_buf_printf(&buf, "%" PRIxZ "\r\n", len);
  
  	if (git_buf_oom(&buf))
  		return -1;
***************
*** 501,507 ****
  	wchar_t *ua = L"git/1.0 (libgit2 " WIDEN(LIBGIT2_VERSION) L")";
  	wchar_t *wide_host;
  	int32_t port;
- 	const char *default_port = "80";
  	int error = -1;
  	int default_timeout = TIMEOUT_INFINITE;
  	int default_connect_timeout = DEFAULT_CONNECT_TIMEOUT;
--- 518,523 ----
***************
*** 907,913 ****
  	size_t len)
  {
  	winhttp_stream *s = (winhttp_stream *)stream;
- 	winhttp_subtransport *t = OWNING_SUBTRANSPORT(s);
  	DWORD bytes_written;
  	int error;
  
--- 923,928 ----
***************
*** 997,1003 ****
  	size_t len)
  {
  	winhttp_stream *s = (winhttp_stream *)stream;
- 	winhttp_subtransport *t = OWNING_SUBTRANSPORT(s);
  	DWORD bytes_written;
  
  	if (!s->request && winhttp_stream_connect(s) < 0)
--- 1012,1017 ----
***************
*** 1043,1049 ****
  	size_t len)
  {
  	winhttp_stream *s = (winhttp_stream *)stream;
- 	winhttp_subtransport *t = OWNING_SUBTRANSPORT(s);
  	int error;
  
  	if (!s->request && winhttp_stream_connect(s) < 0)
--- 1057,1062 ----
