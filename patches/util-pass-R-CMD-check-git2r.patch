*** util.c	2014-12-26 16:00:29.847457300 +0100
--- util-pass-R-CMD-check-git2r.c	2014-12-26 16:00:34.359457420 +0100
***************
*** 14,19 ****
--- 14,28 ----
  # include <Shlwapi.h>
  #endif
  
+ /**
+  * Changed all printf to Rprintf to pass 'R CMD check git2r'*/
+  * 2014-08-19: Stefan Widgren <stefan.widgren@gmail.com>*/
+  *
+  * Removed unused function git__qsort_r_glue_cmp
+  * 2014-12-26: Stefan Widgren <stefan.widgren@gmail.com>*/
+  */
+ void Rprintf(const char*, ...);
+ 
  void git_strarray_free(git_strarray *array)
  {
  	size_t i;
***************
*** 330,365 ****
  	for (i = 0; i < line_count; ++i) {
  		line = buffer + (i * LINE_WIDTH);
  		for (j = 0; j < LINE_WIDTH; ++j, ++line)
! 			printf("%02X ", (unsigned char)*line & 0xFF);
  
! 		printf("| ");
  
  		line = buffer + (i * LINE_WIDTH);
  		for (j = 0; j < LINE_WIDTH; ++j, ++line)
! 			printf("%c", (*line >= 32 && *line <= 126) ? *line : '.');
  
! 		printf("\n");
  	}
  
  	if (last_line > 0) {
  
  		line = buffer + (line_count * LINE_WIDTH);
  		for (j = 0; j < last_line; ++j, ++line)
! 			printf("%02X ", (unsigned char)*line & 0xFF);
  
  		for (j = 0; j < (LINE_WIDTH - last_line); ++j)
! 			printf("	");
  
! 		printf("| ");
  
  		line = buffer + (line_count * LINE_WIDTH);
  		for (j = 0; j < last_line; ++j, ++line)
! 			printf("%c", (*line >= 32 && *line <= 126) ? *line : '.');
  
! 		printf("\n");
  	}
  
! 	printf("\n");
  }
  
  #ifdef GIT_LEGACY_HASH
--- 339,374 ----
  	for (i = 0; i < line_count; ++i) {
  		line = buffer + (i * LINE_WIDTH);
  		for (j = 0; j < LINE_WIDTH; ++j, ++line)
! 			Rprintf("%02X ", (unsigned char)*line & 0xFF);
  
! 		Rprintf("| ");
  
  		line = buffer + (i * LINE_WIDTH);
  		for (j = 0; j < LINE_WIDTH; ++j, ++line)
! 			Rprintf("%c", (*line >= 32 && *line <= 126) ? *line : '.');
  
! 		Rprintf("\n");
  	}
  
  	if (last_line > 0) {
  
  		line = buffer + (line_count * LINE_WIDTH);
  		for (j = 0; j < last_line; ++j, ++line)
! 			Rprintf("%02X ", (unsigned char)*line & 0xFF);
  
  		for (j = 0; j < (LINE_WIDTH - last_line); ++j)
! 			Rprintf("	");
  
! 		Rprintf("| ");
  
  		line = buffer + (line_count * LINE_WIDTH);
  		for (j = 0; j < last_line; ++j, ++line)
! 			Rprintf("%c", (*line >= 32 && *line <= 126) ? *line : '.');
  
! 		Rprintf("\n");
  	}
  
! 	Rprintf("\n");
  }
  
  #ifdef GIT_LEGACY_HASH
***************
*** 607,626 ****
  	return (pos - str);
  }
  
- #if defined(GIT_WIN32) || defined(BSD)
- typedef struct {
- 	git__sort_r_cmp cmp;
- 	void *payload;
- } git__qsort_r_glue;
- 
- static int GIT_STDLIB_CALL git__qsort_r_glue_cmp(
- 	void *payload, const void *a, const void *b)
- {
- 	git__qsort_r_glue *glue = payload;
- 	return glue->cmp(a, b, glue->payload);
- }
- #endif
- 
  void git__qsort_r(
  	void *els, size_t nel, size_t elsize, git__sort_r_cmp cmp, void *payload)
  {
--- 616,621 ----
