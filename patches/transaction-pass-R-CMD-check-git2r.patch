*** transaction.c	2014-11-17 18:59:21.295038201 +0100
--- transaction-pass-R-CMD-check-git2r.c	2014-11-18 21:48:15.237611264 +0100
***************
*** 5,10 ****
--- 5,16 ----
   * a Linking Exception. For full terms see the included COPYING file.
   */
  
+ /**
+  * Changed all 'abort' to 'Rf_error' to pass 'R CMD check git2r'
+  * 2014-11-18: Stefan Widgren <stefan.widgren@gmail.com>
+  */
+ void Rf_error(const char*, ...);
+ 
  #include "common.h"
  #include "repository.h"
  #include "strmap.h"
***************
*** 274,280 ****
  	} else if (node->ref_type == GIT_REF_SYMBOLIC) {
  		ref = git_reference__alloc_symbolic(node->name, node->target.symbolic);
  	} else {
! 		abort();
  	}
  
  	GITERR_CHECK_ALLOC(ref);
--- 280,288 ----
  	} else if (node->ref_type == GIT_REF_SYMBOLIC) {
  		ref = git_reference__alloc_symbolic(node->name, node->target.symbolic);
  	} else {
!             Rf_error(
!                 "Error in 'update_target': Unexpected error. Please report at"
!                 " https://github.com/ropensci/git2r/issues");
  	}
  
  	GITERR_CHECK_ALLOC(ref);
***************
*** 287,293 ****
  	} else if (node->ref_type == GIT_REF_SYMBOLIC) {
  		error = git_refdb_unlock(db, node->payload, true, update_reflog, ref, node->sig, node->message);
  	} else {
! 		abort();
  	}
  
  	git_reference_free(ref);
--- 295,303 ----
  	} else if (node->ref_type == GIT_REF_SYMBOLIC) {
  		error = git_refdb_unlock(db, node->payload, true, update_reflog, ref, node->sig, node->message);
  	} else {
!             Rf_error(
!                 "Error in 'update_target': Unexpected error. Please report at"
!                 " https://github.com/ropensci/git2r/issues");
  	}
  
  	git_reference_free(ref);
