*** attrcache.c.orig	2016-11-05 23:23:19.184028953 +0100
--- attrcache.c	2016-11-05 23:20:20.552024170 +0100
***************
*** 316,321 ****
--- 316,324 ----
  		git_attr_file *file;
  		int i;
  
+ #ifdef _WIN32
+ #pragma GCC diagnostic push
+ #pragma GCC diagnostic ignored "-Wpedantic"
  		git_strmap_foreach_value(cache->files, entry, {
  			for (i = 0; i < GIT_ATTR_FILE_NUM_SOURCES; ++i) {
  				if ((file = git__swap(entry->file[i], NULL)) != NULL) {
***************
*** 324,329 ****
--- 327,343 ----
  				}
  			}
  		});
+ #pragma GCC diagnostic pop
+ #else
+ 		git_strmap_foreach_value(cache->files, entry, {
+ 			for (i = 0; i < GIT_ATTR_FILE_NUM_SOURCES; ++i) {
+ 				if ((file = git__swap(entry->file[i], NULL)) != NULL) {
+ 					GIT_REFCOUNT_OWN(file, NULL);
+ 					git_attr_file__free(file);
+ 				}
+ 			}
+ 		});
+ #endif
  		git_strmap_free(cache->files);
  	}
  
***************
*** 415,422 ****
--- 429,444 ----
  	/* this could be done less expensively, but for now, we'll just free
  	 * the entire attrcache and let the next use reinitialize it...
  	 */
+ #ifdef _WIN32
+ #pragma GCC diagnostic push
+ #pragma GCC diagnostic ignored "-Wpedantic"
  	if (repo && (cache = git__swap(repo->attrcache, NULL)) != NULL)
  		attr_cache__free(cache);
+ #pragma GCC diagnostic pop
+ #else
+ 	if (repo && (cache = git__swap(repo->attrcache, NULL)) != NULL)
+ 		attr_cache__free(cache);
+ #endif
  }
  
  int git_attr_cache__insert_macro(git_repository *repo, git_attr_rule *macro)
***************
*** 453,456 ****
  
  	return (git_attr_rule *)git_strmap_value_at(macros, pos);
  }
- 
--- 475,477 ----
